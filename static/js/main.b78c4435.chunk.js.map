{"version":3,"sources":["components/ErrorBoundary.js","components/Timer/Timer.js","components/Header/Header.js","components/Footer/Footer.js","lib/utils.js","components/TimerDrawer/TimerDrawer.js","App.js","serviceWorker.js","index.js"],"names":["ErrorBoundary","state","hasError","error","errorInfo","this","props","children","React","Component","Timer","progress","isPlaying","className","CircularProgress","size","thickness","color","value","variant","useStyles","makeStyles","theme","root","height","padding","display","alignItems","leading","title","fontSize","fontWeight","timeList","marginLeft","actions","paddingRight","Header","classes","index","totalList","Box","Breadcrumbs","map","i","Typography","key","buildBreadCrumbs","Footer","handleTogglePlaying","handleOpen","IconButton","onClick","secondsInt","min","Math","floor","sec","formatSeconds","times","list","width","fullList","buttons","overflow","justifyContent","timeButton","minWidth","margin","card","marginRight","TimerDrawer","matches2","useMediaQuery","open","deleteTime","addTime","renderTotalList","Fragment","SwipeableDrawer","anchor","onClose","onOpen","clsx","role","List","ListItem","ListItemText","primary","time","Button","Divider","ListItemSecondaryAction","edge","Card","CardContent","CardActions","backgroundColor","flexDirection","noSleep","NoSleep","App","useState","setOpen","setIsPlaying","setProgress","setIndex","setTotalList","setTimeList","v","enable","disable","event","type","handleTimeList","useEffect","interval","setInterval","console","log","length","alert","tick","clearInterval","newList","splice","push","Boolean","window","location","hostname","match","createMuiTheme","palette","main","indigo","secondary","grey","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.b78c4435.chunk.js","sourcesContent":["import React from \"react\";\n\nclass ErrorBoundary extends React.Component {\n  state = { hasError: false };\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { error, hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service\n    // logErrorToMyService(error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return <h1>Something went wrong.</h1>;\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React from \"react\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport \"./Timer.css\";\r\n\r\nconst timerSize = \"28rem\";\r\nconst timerThickness = 22;\r\n\r\nfunction Timer(props) {\r\n  const { progress, isPlaying } = props;\r\n\r\n  return (\r\n    <div className=\"timer-root\">\r\n      {/* <ul className=\"marks\">\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li className=\"hours\"></li>\r\n        <li className=\"hours\"></li>\r\n        <li className=\"hours\"></li>\r\n        <li className=\"hours\"></li>\r\n        <li className=\"hours\"></li>\r\n        <li className=\"hours\"></li>\r\n        <li className=\"hours\"></li>\r\n        <li className=\"hours\"></li>\r\n        <li className=\"hours\"></li>\r\n        <li className=\"hours\"></li>\r\n        <li className=\"hours\"></li>\r\n        <li className=\"hours\"></li>\r\n      </ul> */}\r\n      <div className=\"timer-wrapper-out\">\r\n        <div className=\"timer-wrapper-in\">\r\n          <CircularProgress\r\n            size={timerSize}\r\n            thickness={timerThickness}\r\n            color={isPlaying ? \"primary\" : \"secondary\"}\r\n            value={progress / 36}\r\n            variant=\"static\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Timer;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { Breadcrumbs, IconButton, Box, Typography } from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"3rem\",\r\n    padding: \".5rem\",\r\n    display: \"flex\",\r\n    // alignItems: \"flex-end\",\r\n    alignItems: \"center\",\r\n  },\r\n  leading: {\r\n    // margin,\r\n  },\r\n  title: {\r\n    fontSize: \"2rem\",\r\n    fontWeight: \"bolder\",\r\n  },\r\n  timeList: {\r\n    marginLeft: \"2rem\",\r\n  },\r\n  actions: {\r\n    marginLeft: \"auto\",\r\n    paddingRight: 8,\r\n  },\r\n}));\r\n\r\nfunction Header(props) {\r\n  const classes = useStyles();\r\n  const { index, totalList } = props;\r\n\r\n  const buildBreadCrumbs = () => {\r\n    if (totalList === []) return;\r\n    return (\r\n      <Breadcrumbs className={classes.timeList}>\r\n        {totalList.map((value, i) => {\r\n          return (\r\n            <Typography\r\n              key={i}\r\n              color={i == index ? \"textPrimary\" : \"textSecondary\"}\r\n            >{`${value / 60} Min`}</Typography>\r\n          );\r\n        })}\r\n      </Breadcrumbs>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      {/* <IconButton className={classes.leading} onClick={handleOpen(true)}>\r\n        <MenuIcon />\r\n      </IconButton> */}\r\n      {/* <div className={classes.title}>{`${total} Min Timer`}</div> */}\r\n      {buildBreadCrumbs()}\r\n      <div className={classes.actions}></div>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n\r\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\r\nimport PauseIcon from \"@material-ui/icons/Pause\";\r\n\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\nimport { formatSeconds } from \"lib/utils\";\r\n\r\nimport \"./Footer.css\";\r\nimport { Typography, Box } from \"@material-ui/core\";\r\n\r\nfunction Footer(props) {\r\n  const { handleTogglePlaying, isPlaying, progress, handleOpen } = props;\r\n  return (\r\n    <Box className=\"footer-root\">\r\n      <IconButton onClick={() => handleTogglePlaying(null)}>\r\n        {isPlaying ? <PauseIcon /> : <PlayArrowIcon />}\r\n      </IconButton>\r\n      <Typography>{formatSeconds(progress)}</Typography>\r\n      <Box className=\"blank\" />\r\n      <IconButton onClick={handleOpen(true)}>\r\n        <MenuIcon />\r\n      </IconButton>\r\n      {/* <FormControlLabel\r\n        control={<Switch checked={show} onChange={handleShow} color='primary'/>}\r\n        label=\"Show\"\r\n      /> */}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","export function formatSeconds(secondsInt) {\r\n  let min = Math.floor(secondsInt / 60);\r\n  let sec = secondsInt % 60;\r\n\r\n  if (min < 10) {\r\n    min = \"0\" + min;\r\n  }\r\n  if (sec < 10) {\r\n    sec = \"0\" + sec;\r\n  }\r\n  return `${min}:${sec}`;\r\n}\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\n\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\r\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\r\n\r\nconst times = [10, 20, 30, 40, 50, 60];\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: \"20rem\",\r\n  },\r\n  fullList: {\r\n    width: \"auto\",\r\n  },\r\n  buttons: {\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    justifyContent: \"space-around\",\r\n  },\r\n  timeButton: {\r\n    \"&.MuiButton-root\": {\r\n      minWidth: 0,\r\n    },\r\n  },\r\n  timeList: {\r\n    height: \"10rem\",\r\n    display: \"flex\",\r\n    margin: \".5rem\",\r\n    padding: \"1rem\",\r\n    overflow: \"auto\",\r\n  },\r\n  card: {\r\n    minWidth: \"10rem\",\r\n    marginRight: \"1rem\",\r\n  },\r\n});\r\n\r\nfunction TimerDrawer(props) {\r\n  const classes = useStyles();\r\n  const matches1 = useMediaQuery(\"(max-width: 768px)\");\r\n  const matches2 = useMediaQuery(\"(max-width: 550px)\");\r\n  const matches3 = useMediaQuery(\"(max-width: 400px)\");\r\n  const {\r\n    timeList,\r\n    open,\r\n    handleOpen,\r\n    deleteTime,\r\n    addTime,\r\n    renderTotalList,\r\n  } = props;\r\n\r\n  const list = (timeList) => (\r\n    <div\r\n      className={clsx(classes.fullList, {\r\n        [classes.list]: matches2 == true,\r\n      })}\r\n      role=\"presentation\"\r\n      key={timeList}\r\n    >\r\n      {/* <div>{`(max-width: 768px) matches: ${matches1}`}</div>\r\n      <div>{`(max-width: 550px) matches: ${matches2}`}</div>\r\n      <div>{`(max-width: 400px) matches: ${matches3}`}</div> */}\r\n      <List>\r\n        <ListItem>\r\n          <ListItemText primary=\"Quick Start\" />\r\n        </ListItem>\r\n        <div className={classes.buttons}>\r\n          {times.map((time, index) => (\r\n            <Button\r\n              key={time}\r\n              className={classes.timeButton}\r\n              onClick={() => renderTotalList([time * 60])}\r\n            >{`${time} Min`}</Button>\r\n          ))}\r\n        </div>\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        <ListItem>\r\n          <ListItemText primary=\"Time List (Beta)\" />\r\n          <ListItemSecondaryAction>\r\n            <IconButton edge=\"end\" onClick={() => renderTotalList(timeList)}>\r\n              <PlayArrowIcon />\r\n            </IconButton>\r\n          </ListItemSecondaryAction>\r\n        </ListItem>\r\n        <div className={classes.timeList}>\r\n          {timeList.map((time, index) => (\r\n            <Card key={index} className={classes.card}>\r\n              <CardContent>{time / 60} Min</CardContent>\r\n              <CardActions>\r\n                <Button\r\n                  onClick={() => {\r\n                    deleteTime(index);\r\n                  }}\r\n                >\r\n                  Delete\r\n                </Button>\r\n              </CardActions>\r\n            </Card>\r\n          ))}\r\n        </div>\r\n        <div className={classes.buttons}>\r\n          {times.map((time, index) => (\r\n            <Button\r\n              key={time}\r\n              className={classes.timeButton}\r\n              onClick={() => addTime(time * 60)}\r\n            >{`${time} Min`}</Button>\r\n          ))}\r\n        </div>\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div key={timeList}>\r\n      <React.Fragment>\r\n        {/* <Button onClick={handleOpen(true)}>open</Button> */}\r\n        <SwipeableDrawer\r\n          anchor={matches2 === true ? \"bottom\" : \"right\"}\r\n          open={open}\r\n          onClose={handleOpen(false)}\r\n          onOpen={handleOpen(true)}\r\n        >\r\n          {list(timeList)}\r\n        </SwipeableDrawer>\r\n      </React.Fragment>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TimerDrawer;\r\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Collapse from \"@material-ui/core/Collapse\";\n\nimport NoSleep from \"nosleep.js\";\n\nimport ErrorBoundary from \"components/ErrorBoundary\";\nimport Timer from \"components/Timer\";\nimport Header from \"components/Header\";\nimport Footer from \"components/Footer\";\nimport TimerDrawer from \"components/TimerDrawer\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"calc(100%-240px)\",\n    height: \"100%\",\n    backgroundColor: \"#e6e6e6\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    // paddingTop: `env(safe-area-inset-top)`,\n    // paddingLeft: `env(safe-area-inset-left)`,\n    // paddingRight: `env(safe-area-inset-right)`,\n  },\n}));\n\nlet noSleep = new NoSleep();\n\nfunction App() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [isPlaying, setIsPlaying] = React.useState(false);\n  const [progress, setProgress] = React.useState(60 * 60);\n  const [index, setIndex] = React.useState(0);\n  const [totalList, setTotalList] = React.useState([60 * 60]);\n  const [timeList, setTimeList] = React.useState([]);\n\n  const tick = () => {\n    if (progress <= 0) {\n      console.log(\"end?\", index === totalList.length - 1);\n      if (index === totalList.length - 1) {\n        handleTogglePlaying(false);\n        alert(\"Time Done!\");\n        setIndex(0);\n        setProgress(totalList[0]);\n        return;\n      } else {\n        console.log(\"index: \", totalList[index + 1]);\n        setProgress(totalList[index + 1]);\n        setIndex(index + 1);\n        return;\n      }\n    }\n    setProgress(progress - 1);\n    console.log(`progress: ${progress}`);\n  };\n\n  const handleTogglePlaying = (v) => {\n    if (v == null) {\n      setIsPlaying(!isPlaying);\n      noSleep.enable();\n      return;\n    } else {\n      noSleep.disable();\n      setIsPlaying(v);\n      return;\n    }\n  };\n\n  const renderTotalList = (totalList) => {\n    if (totalList.length === 0) {\n      alert(\"Add Time\");\n      return;\n    }\n    handleTogglePlaying(false);\n    setTotalList(totalList);\n    setProgress(totalList[0]);\n    setOpen(false);\n  };\n\n  const handleOpen = (open) => (event) => {\n    if (\n      event &&\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n    setOpen(open);\n  };\n\n  const handleTimeList = (list) => {\n    if (list === null) return;\n    setTimeList(list);\n  };\n\n  const deleteTime = (index) => {\n    handleTogglePlaying(false);\n    const newList = [...timeList];\n    newList.splice(index, 1);\n    handleTimeList(newList);\n  };\n\n  const addTime = (value) => {\n    handleTogglePlaying(false);\n    const newList = [...timeList];\n    newList.push(value);\n    handleTimeList(newList);\n  };\n\n  React.useEffect(() => {\n    const interval = setInterval(() => {\n      if (isPlaying) {\n        tick();\n      } else {\n        clearInterval(interval);\n      }\n    }, 1000);\n    return () => clearInterval(interval);\n  });\n\n  return (\n    <ErrorBoundary>\n      <div className={classes.root}>\n        <Header index={index} totalList={totalList} />\n        <TimerDrawer\n          timeList={timeList}\n          open={open}\n          handleOpen={handleOpen}\n          handleTimeList={handleTimeList}\n          deleteTime={deleteTime}\n          addTime={addTime}\n          renderTotalList={renderTotalList}\n        />\n        <Timer progress={progress} isPlaying={isPlaying} onClick={handleOpen} />\n        <Footer\n          handleTogglePlaying={handleTogglePlaying}\n          isPlaying={isPlaying}\n          progress={progress}\n          handleOpen={handleOpen}\n        />\n      </div>\n    </ErrorBoundary>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport { indigo, grey } from \"@material-ui/core/colors\";\n\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: indigo[500],\n    },\n    secondary: {\n      main: grey[500],\n    },\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}