{"version":3,"sources":["components/ErrorBoundary.js","components/Timer/Timer.js","components/Header/Header.js","components/ButtonSet/ButtonSet.js","components/Watch/Watch.js","components/Footer/Footer.js","lib/utils.js","App.js","serviceWorker.js","index.js"],"names":["ErrorBoundary","state","hasError","error","errorInfo","this","props","children","React","Component","Timer","progress","isPlaying","className","CircularProgress","size","thickness","color","value","variant","Header","total","ButtonSet","changeTotal","Button","onClick","Watch","Footer","show","handleShow","handleTogglePlaying","Box","IconButton","Typography","secondsInt","min","Math","floor","sec","formatSeconds","FormControlLabel","control","Switch","checked","onChange","label","useStyles","makeStyles","theme","root","width","height","backgroundColor","display","flexDirection","NoSleep","App","classes","useState","setProgress","setTotal","setShow","setIsPlaying","v","useEffect","interval","setInterval","alert","console","log","tick","clearInterval","Collapse","in","Boolean","window","location","hostname","match","createMuiTheme","palette","primary","main","indigo","secondary","grey","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.3d85aca3.chunk.js","sourcesContent":["import React from \"react\";\n\nclass ErrorBoundary extends React.Component {\n  state = { hasError: false };\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { error, hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service\n    // logErrorToMyService(error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return <h1>Something went wrong.</h1>;\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React from \"react\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport \"./Timer.css\";\r\n\r\nconst timerSize = \"28rem\";\r\nconst timerThickness = 22;\r\n\r\nfunction Timer(props) {\r\n  const { progress, isPlaying } = props;\r\n\r\n  return (\r\n    <div className=\"timer-root\">\r\n      {/* <ul className=\"marks\">\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li className=\"hours\"></li>\r\n        <li className=\"hours\"></li>\r\n        <li className=\"hours\"></li>\r\n        <li className=\"hours\"></li>\r\n        <li className=\"hours\"></li>\r\n        <li className=\"hours\"></li>\r\n        <li className=\"hours\"></li>\r\n        <li className=\"hours\"></li>\r\n        <li className=\"hours\"></li>\r\n        <li className=\"hours\"></li>\r\n        <li className=\"hours\"></li>\r\n        <li className=\"hours\"></li>\r\n      </ul> */}\r\n      <div className=\"timer-wrapper-out\">\r\n        <div className=\"timer-wrapper-in\">\r\n          <CircularProgress\r\n            size={timerSize}\r\n            thickness={timerThickness}\r\n            color={isPlaying ? \"primary\" : \"secondary\"}\r\n            value={progress / 36}\r\n            variant=\"static\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Timer;\r\n","import React from \"react\";\r\n\r\nimport \"./Header.css\";\r\nimport { Select, MenuItem, InputLabel } from \"@material-ui/core\";\r\n\r\nfunction Header(props) {\r\n  const { total } = props;\r\n\r\n  return (\r\n    <div className=\"header-root\">\r\n      {/* <Select>\r\n        <InputLabel id=\"select-label\">Minutes</InputLabel>\r\n        <MenuItem value={10}>10</MenuItem>\r\n        <MenuItem value={20}>20</MenuItem>\r\n        <MenuItem value={30}>30</MenuItem>\r\n        <MenuItem value={40}>40</MenuItem>\r\n        <MenuItem value={50}>50</MenuItem>\r\n        <MenuItem value={60}>60</MenuItem>\r\n      </Select> */}\r\n      <div className=\"header-title\">{`${total} Min Timer`}</div>\r\n      <div className=\"header-actions\"></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nimport \"./ButtonSet.css\";\r\n\r\nfunction ButtonSet(props) {\r\n  const { changeTotal } = props;\r\n  return (\r\n    <div className=\"buttonSet-root\">\r\n      {/* <Button onClick={() => changeTotal(1 / 20)}>3 sec</Button> */}\r\n      <Button onClick={() => changeTotal(10)}>10 Min</Button>\r\n      <Button onClick={() => changeTotal(20)}>20 Min</Button>\r\n      <Button onClick={() => changeTotal(30)}>30 Min</Button>\r\n      <Button onClick={() => changeTotal(40)}>40 Min</Button>\r\n      <Button onClick={() => changeTotal(50)}>50 Min</Button>\r\n      <Button onClick={() => changeTotal(60)}>60 Min</Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ButtonSet;\r\n","import React from \"react\";\r\n\r\nimport \"./Watch.css\";\r\n\r\nfunction Watch() {\r\n  return (\r\n    <div id=\"watch\">\r\n      <ul className=\"minute-marks\">\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Watch;\r\n","import React from \"react\";\r\n\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n\r\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\r\nimport PauseIcon from \"@material-ui/icons/Pause\";\r\n\r\nimport { formatSeconds } from \"lib/utils\";\r\n\r\nimport \"./Footer.css\";\r\nimport { Typography, Box } from \"@material-ui/core\";\r\n\r\nfunction Footer(props) {\r\n  const { show, handleShow, handleTogglePlaying, isPlaying, progress } = props;\r\n  return (\r\n    <Box className=\"footer-root\">\r\n      <IconButton onClick={() => handleTogglePlaying(null)}>\r\n        {isPlaying ? <PauseIcon /> : <PlayArrowIcon />}\r\n      </IconButton>\r\n      <Typography>{formatSeconds(progress)}</Typography>\r\n      <Box className=\"blank\" />\r\n      <FormControlLabel\r\n        control={<Switch checked={show} onChange={handleShow} color='primary'/>}\r\n        label=\"Show\"\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","export function formatSeconds(secondsInt) {\r\n  let min = Math.floor(secondsInt / 60);\r\n  let sec = secondsInt % 60;\r\n\r\n  if (min < 10) {\r\n    min = \"0\" + min;\r\n  }\r\n  if (sec < 10) {\r\n    sec = \"0\" + sec;\r\n  }\r\n  return `${min}:${sec}`;\r\n}\r\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport NoSleep from \"nosleep.js\";\n\nimport ErrorBoundary from \"components/ErrorBoundary\";\nimport Collapse from \"@material-ui/core/Collapse\";\n\nimport Timer from \"components/Timer\";\nimport Header from \"components/Header\";\nimport ButtonSet from \"components/ButtonSet\";\nimport Watch from \"components/Watch\";\nimport Footer from \"components/Footer\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    height: \"100%\",\n    backgroundColor: \"#e6e6e6\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n}));\n\nlet noSleep = new NoSleep();\n\nfunction App() {\n  const classes = useStyles();\n  const [progress, setProgress] = React.useState(60 * 60);\n  const [total, setTotal] = React.useState(60);\n  const [show, setShow] = React.useState(true);\n  const [isPlaying, setIsPlaying] = React.useState(false);\n\n  const tick = () => {\n    if (progress <= 0) {\n      alert(\"Time Done!\");\n      changeTotal(total);\n      return;\n    }\n    setProgress(progress - 1);\n    console.log(`progress: ${progress}`);\n  };\n\n  const handleTogglePlaying = (v) => {\n    if (v == null) {\n      setIsPlaying(!isPlaying);\n      // noSleep.enable();\n      return;\n    } else {\n      // noSleep.disable();\n      setIsPlaying(v);\n      return;\n    }\n  };\n\n  const changeTotal = (total) => {\n    handleTogglePlaying(false);\n    setTotal(total);\n    setProgress(60 * total);\n  };\n\n  const handleShow = () => {\n    setShow(!show);\n  };\n\n  React.useEffect(() => {\n    const interval = setInterval(() => {\n      if (isPlaying) {\n        tick();\n      } else {\n        clearInterval(interval);\n      }\n    }, 1000);\n    return () => clearInterval(interval);\n  });\n\n  return (\n    <ErrorBoundary>\n      <div className={classes.root}>\n        <Collapse in={show}>\n          <Header total={total} progress={progress} />\n        </Collapse>\n        <Timer progress={progress} isPlaying={isPlaying} />\n        {/* <Watch /> */}\n        <Collapse in={show}>\n          <ButtonSet\n            changeTotal={changeTotal}\n            handleTogglePlaying={handleTogglePlaying}\n            isPlaying={isPlaying}\n          />\n        </Collapse>\n        <Footer\n          show={show}\n          handleShow={handleShow}\n          handleTogglePlaying={handleTogglePlaying}\n          isPlaying={isPlaying}\n          progress={progress}\n        />\n      </div>\n    </ErrorBoundary>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport { indigo, grey } from \"@material-ui/core/colors\";\n\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: indigo[500],\n    },\n    secondary: {\n      main: grey[500],\n    },\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}